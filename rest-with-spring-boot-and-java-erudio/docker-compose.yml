version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: java-db
    environment:
      POSTGRES_DB: java_champion
      POSTGRES_USER: java_user
      POSTGRES_PASSWORD: java_password
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h 127.0.0.1 -p 5432"]
      interval: 5s
      timeout: 5s
      retries: 20

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rest-with-spring-boot-java
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/java_champion
      SPRING_DATASOURCE_USERNAME: java_user
      SPRING_DATASOURCE_PASSWORD: java_password

      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_SQL_INIT_MODE: never
      SPRING_JPA_OPEN_IN_VIEW: "false"
      SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_TIME_ZONE: UTC
      SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_BATCH_FETCH_SIZE: "50"

    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 20s

volumes:
  pgdata: